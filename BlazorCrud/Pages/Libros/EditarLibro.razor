@page "/editar-libro/{id:int}"
@using BlazorCrud.Modelos
@using BlazorCrud.Repositorio
@inject IRepositorio Repositorio
@inject NavigationManager navigationManager

<div class="card">
	<div class="card-header">
		<div class="row">
			<div class="col-12">
				<h2 class="text-dark"> Editar libro </h2>
			</div>
		</div>
	</div>
	<div class="card-body">
		<EditForm Model="modeloLibro" OnValidSubmit="@( () => ManejadorOnEditarLibro() )">
			<DataAnnotationsValidator></DataAnnotationsValidator>
			<div class="container">
				<div class="form-group mb-2">
					<div class="row">
						<div class="col-2">
							<label>Titulo: </label>
						</div>
						<div class="col-6">
							<InputText @bind-Value="modeloLibro.Titulo"
									   class="form-control"
									   placeholder="Ingresa el titulo">
							</InputText>
							<ValidationMessage For="() => modeloLibro.Titulo"></ValidationMessage>
						</div>
					</div>
				</div>
				<div class="form-group mb-2">
					<div class="row">
						<div class="col-2">
							<label>Descripcion: </label>
						</div>
						<div class="col-6">
							<InputText @bind-Value="modeloLibro.Descripcion"
									   class="form-control"
									   placeholder="Ingresa la descripcion">
							</InputText>
							<ValidationMessage For="() => modeloLibro.Descripcion"></ValidationMessage>
						</div>
					</div>
				</div>
				<div class="form-group mb-2">
					<div class="row">
						<div class="col-2">
							<label>Autor: </label>
						</div>
						<div class="col-6">
							<InputText @bind-Value="modeloLibro.Autor"
									   class="form-control"
									   placeholder="Ingresa el autor">
							</InputText>
							<ValidationMessage For="() => modeloLibro.Autor"></ValidationMessage>
						</div>
					</div>
				</div>
				<div class="form-group mb-2">
					<div class="row">
						<div class="col-2">
							<label>Paginas: </label>
						</div>
						<div class="col-6">
							<InputNumber @bind-Value="modeloLibro.Paginas"
										 class="form-control"
										 placeholder="Ingresa el numero de paginas">
							</InputNumber>
							<ValidationMessage For="() => modeloLibro.Paginas"></ValidationMessage>
						</div>
					</div>
				</div>
				<div class="form-group mb-4">
					<div class="row">
						<div class="col-2">
							<label>Precio: </label>
						</div>
						<div class="col-6">
							<InputNumber @bind-Value="modeloLibro.Precio"
										 class="form-control"
										 placeholder="Ingresa el precio">
							</InputNumber>
							<ValidationMessage For="() => modeloLibro.Precio"></ValidationMessage>
						</div>
					</div>
				</div>
				<div class="form-group mb-4">
					<div class="row">
						<div class="col-2">
							<button type="submit" class="btn btn-success">
								<span class="oi oi-cog mr-4" aria-hidden="true"></span>
								Actualizar
							</button>
						</div>
						<div class="col-6">
							<button class="btn btn-danger" @onclick="@(()=> navigationManager.NavigateTo("/libros"))">
								<span class="oi oi-chevron-left mr-4" aria-hidden="true"></span>
								Regresar
							</button>
						</div>
					</div>
				</div>
			</div>
		</EditForm>
	</div>
</div>

@code {
	private Libro modeloLibro = new Libro();
	/// <summary>
	/// Este es el parametro recibido en @page "/editar-libro/{id:int}"
	/// </summary>
	[Parameter]
	public int? Id { get; set; }

	/// <summary>
	/// Este es algo asi como el onInit de Angular
	/// </summary>
	/// <returns></returns>
	protected override async Task OnInitializedAsync()
	{
		if (!Id.HasValue)
			navigationManager.NavigateTo("/libros");

		modeloLibro = await Repositorio.GetLibroById(Id.Value);

		if (modeloLibro == null)
			navigationManager.NavigateTo("/libros");
	}

	private async Task ManejadorOnEditarLibro()
	{
		var crearLibro = await Repositorio.ActualizarLibro(Id.Value, modeloLibro);
		navigationManager.NavigateTo("/libros");
	}
}
